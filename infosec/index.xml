<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infosec on darkvolumes</title>
    <link>https://darkvolumes.nz/infosec/</link>
    <description>Recent content in Infosec on darkvolumes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Mar 2022 00:00:00 +0200</lastBuildDate><atom:link href="https://darkvolumes.nz/infosec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Insomnihack 2022 (notes)</title>
      <link>https://darkvolumes.nz/infosec/conferences/insomnihack/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0200</pubDate>
      
      <guid>https://darkvolumes.nz/infosec/conferences/insomnihack/</guid>
      <description># Insomnihack Itâ€™s Raining Shells - How to Find New Attack Primitives in Azure? Speaker. Andy Robbins @_wald0
Abuses vs Bugs Advantages of abuses:
cheaper to maintain longer shelf life they exist in each instance they are a challenge for detection Research methodology begin with the end in mind study design system (&amp;ldquo;academic knowledge&amp;rdquo;) official documentation repos and repos issues talks (12-24 hours) chats, forums explore the system OSINT example to find people to learn from: site:linkedin.</description>
    </item>
    
    <item>
      <title>ps aux and ss -tulpn via directory trasversal</title>
      <link>https://darkvolumes.nz/infosec/directory-trasversal/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0200</pubDate>
      
      <guid>https://darkvolumes.nz/infosec/directory-trasversal/</guid>
      <description>ps aux and ss -tulpn via directory trasversal Getting a directory trasversal vulnerability may allow you read the contents of /etc/passwd but that is far from getting an initial foothold.
However we can leverage directory trasversal to perform further enumeration, namely reading the contents of /proc/sched_debug/,/proc/net/tcp and /proc/net/udp to list running processes and listening ports.
Knowing the listening ports has two advantages:
no scan is required it shows all listening ports, while a scan would not because of the firewall Get running processes Definition.</description>
    </item>
    
    <item>
      <title>BlackAlps 2019 (notes)</title>
      <link>https://darkvolumes.nz/infosec/conferences/blackalps/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0200</pubDate>
      
      <guid>https://darkvolumes.nz/infosec/conferences/blackalps/</guid>
      <description>Black Alps Google Bug Hunters Speaker: Eduardo Vela Nava
On average the VRP (Vulnerability Reward Program) receives 35 reports per day.
There are 12 people on rotation, 2 per day checking the reports, a junior paired with a senior.
The technical review is separated from the financial rewards.
The overview of the process is the following:
product team &amp;lt;-----&amp;gt; triage &amp;lt;-----&amp;gt; bug hunter |	|	^ |	|	| |	V	| |__________________ VRP panel __________| People in the VRP panel see only the issues that are accepted (hence the most interesting).</description>
    </item>
    
    <item>
      <title>OWASP AppSecEU 2016 (notes)</title>
      <link>https://darkvolumes.nz/infosec/conferences/owasp-appsec/</link>
      <pubDate>Wed, 24 Aug 2016 00:00:00 +0200</pubDate>
      
      <guid>https://darkvolumes.nz/infosec/conferences/owasp-appsec/</guid>
      <description>OWASP AppSecEU Charlie Miller - bug hunting Choose the application to audit:
How spread is the app? How hard is to find a vulnerability? How hard is to exploit the vulnerability? Size of data: eg. sms vs pdf Interaction: eg. javascript vs jpeg Services: eg. Netbios vs HTTP Static analysis - cons:
hard to measure progress, it does not scale problem of understanding the whole program ps-&amp;gt;free = node instead of active This bug is difficult to find with static analysis or even by a human being, as a matter of fact it was found with a fuzzer Dynamic analysis - aka fuzzing:</description>
    </item>
    
  </channel>
</rss>
